# Use pre-commit hooks to identify issues before code submissions. See https://pre-commit.com for more details and
# https://pre-commit.com/hooks.html for hook details.

# Use local pre-commit hooks in poetry's virtual environment by setting `repo: local`, `language: script`, and
# `entry: `.venv/bin/<script>`. Script hooks execute faster than equivalent ones with `language: system` and
# `entry: poetry run <script>` as they side-step poetry's startup overhead.

minimum_pre_commit_version: "2.20"

default_stages:
  - commit

repos:
  - repo: local

    hooks:
      - id: check-yaml
        name: "\U00002705\ufe0f Check - YAML file syntax"
        language: script
        entry: .venv/bin/check-yaml
        types:
          - yaml

      - id: check-toml
        name: "\U00002705\ufe0f Check - TOML file syntax"
        language: script
        entry: .venv/bin/check-toml
        types:
          - toml

      - id: check-rst
        name: "\U00002705\ufe0f Check - RST file syntax"
        language: script
        entry: .venv/bin/rstcheck
        types:
          - rst

      - id: check-case-conflict
        name: "\U0001f524\ufe0f Check - Filename case conflicts"
        language: script
        entry: .venv/bin/check-case-conflict

      - id: name-tests-test
        name: "\U0001f524\ufe0f Check - Filename for tests"
        language: script
        entry: .venv/bin/name-tests-test
        args:
          - "--pytest-test-first"
        files: (^|/)tests/.+\.py$


      - id: check-added-large-files
        name: "\U0001f40b\ufe0f Check - No large files"
        language: script
        entry: .venv/bin/check-added-large-files

      - id: poetry-check
        name: "\U00002699\ufe0f  Check - Poetry configuration file"
        language: system
        entry: poetry check
        files: ^pyproject.toml$
        pass_filenames: false

      - id: trailing-whitespace-fixer
        name: "\U0001f51a\ufe0f Fix - Trailing whitespaces"
        language: script
        entry: .venv/bin/trailing-whitespace-fixer
        types:
          - text

      - id: mixed-line-ending
        name: "\U000021a9\ufe0f  Fix - Mixed line endings"
        language: script
        entry: .venv/bin/mixed-line-ending
        args:
          - "--fix=lf"

      - id: end-of-file-fixer
        name: "\U00002702\ufe0f  Fix - Single-newline file ending"
        language: script
        entry: .venv/bin/end-of-file-fixer
        types:
          - text

      - id: isort
        name: "\U0001f9e1\ufe0f Fix - Python import order (isort)"
        language: script
        entry: .venv/bin/isort
        require_serial: true
        types_or:
          - python
          - pyi

      - id: black
        name: "\U0001f5a4\ufe0f Fix - Python code formatting (black)"
        language: script
        entry: .venv/bin/black
        require_serial: true
        types_or:
          - python
          - pyi

      - id: blacken-docs
        name: "\U00002712\ufe0f  Fix - Python docs formatting (blacken)"
        language: script
        entry: .venv/bin/blacken-docs
        require_serial: true
        types_or:
          - python
          - pyi
          - rst

      - id: pylint
        name: "\U0001f443\ufe0f Analyse - Python code smells (pylint)"
        language: script
        entry: .venv/bin/pylint
        require_serial: true
        types_or:
          - python
          - pyi
        stages:
          - push

      - id: mypy
        name: "\U0001f4d8\ufe0f Analyse - Python code typing (mypy)"
        language: script
        entry: .venv/bin/mypy
        require_serial: true
        types_or:
          - python
          - pyi
        stages:
          - push

      - id: bandit
        name: "\U000026cf\ufe0f  Analyse - Python code vulnerabilities (bandit)"
        language: script
        entry: .venv/bin/bandit -c pyproject.toml
        require_serial: true
        types_or:
          - python
          - pyi
        stages:
          - push

      - id: poetry-lock
        name: "\U0001f512\ufe0f Update - Poetry lock file"
        language: system
        entry: poetry lock
        files: ^pyproject.toml$
        pass_filenames: false
        stages:
          - push

      - id: tox
        name: "\U0001f680\ufe0f Validate â€“ Package build and test (tox and pytest)"
        language: script
        entry: .venv/bin/tox --parallel
        pass_filenames: false
        types_or:
          - python
          - pyi
        stages:
          - push
