name: Run Tests

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  tests:
    name: ${{ matrix.os }}-${{ matrix.os-version }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-${{ matrix.os-version }}
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - macOS
          - Windows
        os-version:
          - latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/pdm.lock') }}
          path: |
            .venv
            .tox

      - name: Check cache health
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 5s .venv/bin/pip --version || rm -rf .venv

      - name: Install CI dependencies
        run: pdm install --no-self --group ci

      - name: Run tests
        run: pdm run tox -e $(echo py${{ matrix.python-version }} | tr -d .)

      - name: Store coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage_cache/
